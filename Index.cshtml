@{    
    Page.Title = "Welcome";
    //Page.Description = "Something to display in brief page summary";
    Layout = "~/_Layout.cshtml";
}
@section head {
}
<div id="about" class="section wb nopadtop">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="message-box">
                    <h4>
                        From Product inception to successful rollout, support & professional services</h4>
                    <h2>
                        Complete Range of Software Development Services
                    </h2>
                    <p>Software Product Engineering is a lot deeper than simply coding. It caters to the complete software product life cycle from ideation and innovation down to deployment and maintenance. At Clavis we follow a methodology that ensures delivery of a high quality software solution.</p>
                </div>
                <!-- end messagebox -->
            </div>
            <!-- end col -->
            
                <div class="col-md-12">
                <div class="post-media wow fadeIn">
                    <img src="images/app-development-process.png" alt="" class="img-fluid">
                </div>                
            </div>
            <div class="col-md-3">
                <h4>
                    1. Ideation</h4>
                <p>
                    We get involved at the idea stage, and that means the feasibility study to see if it looks reasonably viable, a system investigation to understand the practicality of the software and an analysis of the project goals followed by requirement definition</p>
            </div>
            <div class="col-md-3">
                <h4>
                    2. Architecture</h4>
                <p>
                    Here we create the core structure that defines the priorities that need to be focussed on keeping in mind the objective of the software. This addresses the key system concerns and is similar to a blueprint of a building.
                </p>
            </div>
            <div class="col-md-3">
                <h4>
                    3. Design</h4>
                <p>
                    Here we create the core structure that defines the priorities that need to be focussed on keeping in mind the objective of the software. This addresses the key system concerns and is similar to a blueprint of a building.
                </p>
            </div>
            <div class="col-md-3">
                <h4>
                    4. Testing</h4>
                <p>
                    Since we follow the agile model, this stage happens in parallel with the design stage. High quality testing including unit testing, system testing (which may include black-box, white-box, automation and regression) followed by user acceptance testing.
                </p>
            </div>
        
            <div class="col-md-3">
                <h4>
                    5. Deployment</h4>
                <p>
                    Merging the work of all the developers and deploying it to a common build environment called the staging server is another step that happens concurrently with the design and testing. Post user acceptance testing on the staging server, the system is taken to the production (or live) server for final use by your end users.
                </p>
            </div>
            <div class="col-md-3">
                <h4>
                    6. Maintenance</h4>
                <p>
                    We believe post deployment maintenance to be a very important part of the software engineering. Based on live user scenarios, we do impact and maintainability measurements that allows us to effectively optimise the software, correct errors and bugs, and remove any system redundancies that crop up.
                </p>
            </div>
            <div class="col-md-3">
                <h4>
                    7. Technical Support</h4>
                <p>
                    The technical support team gets involved as soon as the product is live. Having level 1 and level 2 knowledge of the product that includes functional and administrative handling ensures that they can serve your end users, power users and system administrators. Plus route and support any issues and bugs being faced by users.
                </p>
            </div>
            <div class="col-md-3">
                <h4>
                    8. Professional Services</h4>
                <p>
                    The final and ongoing phase is where the professional services team is involved in measuring the effectiveness, durability, scalability and performs an enhancement analysis. These include features that will improve your product from a functional and user experience perspective and cater to new environment enhancements like software upgrades as they occur.
                </p>
            </div>
            <!-- end col -->
        </div>
        <div class="row">
        <div class="col-md-12">
        <h1>Our Engagement Models</h1>
        </div>
        </div>
           <div class="row">
            <div class="col-md-6">
            
            <h4>1. Fixed budget</h4>
            <p>
If you have a clearly defined project scope, this is best way to go. Even if it’s a Phase-I or a PoC, we work with you to make sure you get high quality output at a flat cost. We are flexible based on changes and enhancements during project development.
</p>
<h5>2. Time & Material</h5>
<p>
Here you pay for what you use. As most projects grow, you may need dedicated or shared resources to develop your software in a way that aligns with changing business dynamics.
</p>
            </div>
            <div class="col-md-6">
             <div class="post-media wow fadeIn">
                    <img src="images/agile-development-model.png" alt="" class="img-fluid">
                </div>  
            </div>
            </div>
    </div>
</div>
